---
# defaults file for ansible-redis

# Defines the addresses that Redis should listen on
redis_bind_addresses:
  # - 0.0.0.0
  - 127.0.0.1
  - ::1

# Defines if Redis is configured
redis_config_redis: false

# Set the number of databases. The default database is DB 0, you can select
# a different one on a per-connection basis using SELECT <dbid> where
# dbid is a number between 0 and 'databases'-1
redis_databases: 16

# Set the max number of connected clients at the same time
redis_max_clients: 10000

# Define Redis memory limit
# ex. 2147483648, 2048mb, 2gb
# or use the below calculated value
redis_maxmemory: "{{ (ansible_memtotal_mb | int * redis_maxmemory_size_multiplier) | round | int }}mb"

# Defines if maxmemory settings are applied
redis_maxmemory_config: false

# volatile-lru|allkeys-lru|volatile-random|allkeys-random|volatile-ttl|noeviction
redis_maxmemory_policy: noeviction

redis_maxmemory_samples: 5

# Define multiplier to calculate redis_maxmemory based on installed total memory
redis_maxmemory_size_multiplier: 0.5

# Define Redis listen port
redis_port: 6379

# Enable replication (true|false)
redis_replication: false

# Define the master replication address
redis_replication_address: "{{ hostvars[inventory_hostname]['ansible_' + redis_replication_interface]['ipv4']['address'] }}"

# Define the Ansible group which the nodes belong to for replication
# This group must exist.
redis_replication_ansible_group: redis

# Define the interface which should be used for replication
# ex. eth1|enp0s3|enp0s8
redis_replication_interface: enp0s3

# How frequently to snapshot the database to disk
# ex. "900 1" => 900 seconds if at least 1 key changed
redis_save_to_disk:
  - seconds: 900
    changes: 1
  - seconds: 300
    changes: 10
  - seconds: 60
    changes: 10000

# Define Redis Setinel listen port
redis_sentinel_port: 26379

# System tweaks specific to Redis performance
redis_sysctl_settings:
  []
  # - name:                      net.core.somaxconn
  #   value:                     "{{ redis_tcp_backlog }}"
  # - name:                      vm.overcommit_memory
  #   value:                     1

# In high requests-per-second environments you need an high backlog in order
# to avoid slow clients connections issues
redis_tcp_backlog: 511

# Redis user info
redis_user_info:
  group: redis
  name: redis
