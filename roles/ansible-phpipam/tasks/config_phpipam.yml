---
- name: config_phpipam | installing phpIPAM from git
  git:
    repo: "https://github.com/phpipam/phpipam.git"
    dest: "{{ phpipam_install_dir }}"
    version: "{{ phpipam_install_git_version|default ('HEAD') }}"
    # Shallow clone
    depth: 1
    # Required as phpipam 1.3.1+ has submodules
    recursive: true
    update: "{{ phpipam_install_from_git_update }}"
  become: true
  when: phpipam_install_from_git|bool

- name: config_phpipam | creating phpipam web config
  template:
    src: config.php.j2
    dest: "{{ phpipam_install_dir + '/config.php' }}"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
    backup: yes
  become: true

- name: config_phpipam | configuring .htacess
  template:
    src: htaccess.j2
    dest: "{{ phpipam_install_dir + '/.htaccess' }}"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
    backup: yes
  become: true

- name: config_phpipam | Customizing DB Schema
  template:
    src: SCHEMA.sql.j2
    dest: "{{ phpipam_install_dir + '/db/SCHEMA.sql' }}"
    owner: "{{ web_owner }}"
    group: "{{ web_group }}"
    backup: yes
  become: true
  when: phpipam_custom_db_schema|bool

- name: config_phpipam | creating phpipam db
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: present
  become: true
  when:
    - phpipam_pre_load_db|bool
    - not phpipam_db_cluster|bool

- name: config_phpipam | creating phpipam db
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: present
  become: true
  when:
    - phpipam_pre_load_db|bool
    - phpipam_db_cluster|bool
    - inventory_hostname == phpipam_primary

- name: config_phpipam | creating phpipam db user
  mysql_user:
    name: "{{ phpipam_db_user }}"
    password: "{{ phpipam_db_pass }}"
    priv: "{{ phpipam_db_name }}.*:ALL"
    host: "{{ item }}"
    state: present
  become: true
  loop: "{{ phpipam_db_allow_access_from_hosts }}"
  when: not phpipam_db_cluster|bool

- name: config_phpipam | creating phpipam db user
  mysql_user:
    name: "{{ phpipam_db_user }}"
    password: "{{ phpipam_db_pass }}"
    priv: "{{ phpipam_db_name }}.*:ALL"
    host: "{{ item }}"
    state: present
  become: true
  loop: "{{ phpipam_db_allow_access_from_hosts }}"
  when:
    - phpipam_db_cluster|bool
    - inventory_hostname == phpipam_primary

- name: config_phpipam | Checking If DB Tables Exist
  command: >
    mysql
    -u {{ phpipam_db_user }}
    --password={{ phpipam_db_pass }}
    -h {{ phpipam_db_host }}
    -e "show tables from {{ phpipam_db_name }};"
  become: true
  register: phpipam_tables
  changed_when: false
  when: phpipam_pre_load_db|bool

- name: config_phpipam | importing phpipam database
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: import
    target: "{{ phpipam_install_dir }}/db/SCHEMA.sql"
  become: true
  when:
    - phpipam_pre_load_db|bool
    - ('ipaddresses' not in phpipam_tables.stdout_lines)
    - not phpipam_db_cluster|bool

- name: config_phpipam | importing phpipam database
  mysql_db:
    name: "{{ phpipam_db_name }}"
    state: import
    target: "{{ phpipam_install_dir }}/db/SCHEMA.sql"
  become: true
  when:
    - phpipam_pre_load_db|bool
    - ('ipaddresses' not in phpipam_tables.stdout_lines)
    - phpipam_db_cluster|bool
    - inventory_hostname == phpipam_primary

- name: config_phpipam | Ensuring Permissions Are Correctly Set
  file:
    path: "{{ phpipam_install_dir }}"
    group: "{{ web_group }}"
    owner: "{{ web_owner }}"
    state: "directory"
    recurse: yes
  become: true
  when: phpipam_install_from_git|bool
