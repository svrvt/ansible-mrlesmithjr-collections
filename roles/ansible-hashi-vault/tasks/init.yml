---
# We make the API call to check if vault has already been initialized
- name: init | Checking If HashiCorp Vault Has Been Initialized
  uri:
    url: "{{ hashi_vault_server_url+'/v1/sys/init' }}"
  register: _hashi_vault_initialized
  when: inventory_hostname == hashi_vault_master
  until: _hashi_vault_initialized.status == 200

# We initialize vault if it has already not been
- name: init | Initializing HashiCorp Vault
  uri:
    url: "{{ hashi_vault_server_url+'/v1/sys/init' }}"
    body: |
      {{ hashi_vault_init_string }}
    body_format: json
    method: PUT
  register: _hashi_vault_init
  changed_when: true
  no_log: true
  when:
    - inventory_hostname == hashi_vault_master
    - not _hashi_vault_initialized.json.initialized|bool

- name: init | Checking For {{ hashi_vault_init_output_file }}
  stat:
    path: "{{ hashi_vault_init_output_file }}"
  become: true
  register: _hashi_vault_init_output_file

# We generate a JSON parsable file which contains the init info so we do not
# lose the info and also have it available to use in other tasks
# **** This might need to have more stringent controls around it other than the
# permissions set here.
- name: init | Generating {{ hashi_vault_init_output_file }} # noqa 503
  template:
    src: vault_init.json.j2
    dest: "{{ hashi_vault_init_output_file }}"
    owner: root
    group: root
    mode: u=r,g=,o=
  become: true
  when: not _hashi_vault_init_output_file.stat.exists|bool
