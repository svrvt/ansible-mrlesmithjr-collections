---
- name: install | Creating {{ hashi_vault_config_dir }}
  file:
    path: "{{ hashi_vault_config_dir }}"
    state: directory
  become: true

- name: install | Creating {{ hashi_vault_configuration.storage.file.path }}
  file:
    path: "{{ hashi_vault_configuration.storage.file.path }}"
    state: directory
    owner: "{{ hashi_vault_user_info.user }}"
    group: "{{ hashi_vault_user_info.group }}"
  become: true
  when: hashi_vault_configuration.storage.file.path is defined

- name: install | Checking For Previous Install Of HashiCorp Vault
  stat:
    path: "{{ hashi_vault_install_dir+'/vault' }}"
  register: _hashi_vault_install

- name: install | Capturing HashiCorp Vault Installed Version (If Installed) # noqa 306
  shell: "{{ hashi_vault_install_dir }}/vault version | awk '{ print substr($2,2) }'"
  register: _hashi_vault_version
  changed_when: false
  when: _hashi_vault_install.stat.exists

- name: install | Showing HashiCorp Vault Installed Version (If Installed)
  debug:
    msg: "{{ 'HashiCorp Vault Version Installed: '+_hashi_vault_version.stdout }}"
  when:
    - _hashi_vault_install.stat.exists

- name: install | Installing HashiCorp Vault
  unarchive:
    src: "{{ 'https://releases.hashicorp.com/vault/'+hashi_vault_version|string+'/vault_'+hashi_vault_version|string+'_linux_amd64.zip' }}"
    dest: "{{ hashi_vault_install_dir+'/' }}"
    remote_src: true
  become: true
  when: >
    (not _hashi_vault_install['stat']['exists'] or
    (_hashi_vault_install['stat']['exists'] and
    _hashi_vault_version['stdout'] != hashi_vault_version))
