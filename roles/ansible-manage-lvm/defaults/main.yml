---
# defaults file for ansible-manage-lvm
lvm_groups: []
# - vgname: ubuntu-vg
#   disks:
#     - /dev/sda5
#     - /dev/sdc
#     - /dev/sdd
#   # defines if VG should exist or be removed
#   # true or false
#   create: true
#   # defines if PV should be resized to max size
#   pvresize: false
#   lvnames:
#     - lvname: swap_1
#       # Define size of lvol
#       # 100%FREE, 10g, 1024 (megabytes by default)
#       size: 5g
#       # Defines additional lvcreate options (e.g. stripes, stripesize, etc)
#       opts: ''
#       # Defines if lvol should exist or be removed
#       # true or false
#       create: true
#       # Defines filesystem to format lvol as
#       filesystem: swap
#       # Defines if filesystem should be mounted
#       mount: false
#       # Defines mountpoint for lvol
#       mntp: []
#       # Defines additional mount options (e.g. noatime, noexec, etc)
#       mopts: ''
#     - lvname: root
#       size: 40g
#       create: true
#       filesystem: ext4
#       # Defines options passed to the filesystem creation command
#       fsopts:
#       mount: true
#       mntp: /
# - vgname: test-vg
#   disks:
#     - /dev/sdb
#   create: true
#   lvnames:
#     - lvname: test_1
#       size: 5g
#       create: true
#       filesystem: ext4
#       mount: true
#       mntp: /mnt/test_1
#     - lvname: test_2
#       size: 10g
#       create: true
#       filesystem: ext4
#       mount: true
#       mntp: /mnt/test_2
# - vgname: cinder-volumes
#   disks:
#     - /dev/cciss/c0d1
#   create: true
#   lvnames:
#   # Set to None to only create LVM VG w/out creating LVM LVOLS
#    - None
#   # Using fsopts to create a docker compatible xfs volume
# - vgname: docker-volumes
#   disks:
#     - /dev/vdc
#     - /dev/vdd
#   create: true
#   lvnames:
#     - lvname: docker_1
#       size: 100%FREE
#       create: true
#       filesystem: xfs
#       fsopts: -n ftype=1
#       mount: true
#       mntp: /var/lib/docker

# Defines if LVM will be managed by role
# default is false to ensure nothing is changed by accident.
manage_lvm: false

###     nvme to scsi device name map binary helper
ebsnvme_binary_helper_ver: '0.1.3'
ebsnvme_binary_helper_tmp: '/tmp'
ebsnvme_binary_helper_path: '/sbin/go-ebsnvme'

###     nvme to scsi device name map script helper
ebsnvme_scrip_helper_path: '/usr/local/bin/ebsnvme-id'

###   resize all pv's to max size
pvresize_to_max: false
